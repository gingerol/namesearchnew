version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: namesearch-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=namesearch
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: namesearch-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: namesearch-backend
    command: uvicorn namesearch.main:app --host 0.0.0.0 --port 5000 --reload
    volumes:
      - .:/app
    ports:
      - "5000:5000"
    environment:
      - DEBUG=True
      - DATABASE_URI=postgresql+psycopg2://postgres:postgres@db:5432/namesearch
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
      - ACCESS_TOKEN_EXPIRE_MINUTES=1440
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Uncomment this section when you're ready to set up the frontend
  # frontend:
  #   build:
  #     context: ../frontend
  #     dockerfile: Dockerfile
  #   container_name: namesearch-frontend
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NODE_ENV=development
  #     - REACT_APP_API_URL=http://localhost:5000/api
  #   volumes:
  #     - ../frontend:/app
  #     - /app/node_modules
  #   depends_on:
  #     - backend

volumes:
  postgres_data:
  redis_data:
